//go:build unit

// Code generated by MockGen. DO NOT EDIT.
// Source: leaderboard/enriching/interfaces.go

// Package mock_enriching is a generated GoMock package.
package mock_enriching

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/topfreegames/podium/leaderboard/v2/model"
)

// MockEnricher is a mock of Enricher interface.
type MockEnricher struct {
	ctrl     *gomock.Controller
	recorder *MockEnricherMockRecorder
}

// MockEnricherMockRecorder is the mock recorder for MockEnricher.
type MockEnricherMockRecorder struct {
	mock *MockEnricher
}

// NewMockEnricher creates a new mock instance.
func NewMockEnricher(ctrl *gomock.Controller) *MockEnricher {
	mock := &MockEnricher{ctrl: ctrl}
	mock.recorder = &MockEnricherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnricher) EXPECT() *MockEnricherMockRecorder {
	return m.recorder
}

// Enrich mocks base method.
func (m *MockEnricher) Enrich(tenantID, leaderboardID string, members []*model.Member) ([]*model.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Enrich", tenantID, leaderboardID, members)
	ret0, _ := ret[0].([]*model.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Enrich indicates an expected call of Enrich.
func (mr *MockEnricherMockRecorder) Enrich(tenantID, leaderboardID, members interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enrich", reflect.TypeOf((*MockEnricher)(nil).Enrich), tenantID, leaderboardID, members)
}
